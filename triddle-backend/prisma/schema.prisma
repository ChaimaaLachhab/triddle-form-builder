// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(uuid())
  name               String
  email              String    @unique
  password           String
  role               Role      @default(USER)
  resetPasswordToken String?
  resetPasswordExpire DateTime?
  createdAt          DateTime  @default(now())
  forms              Form[]
  responses          Response[]

  @@map("users")
}

model Form {
  id          String    @id @default(uuid())
  title       String
  description String?
  fields      Json
  logicJumps  Json?
  settings    Json?
  status      FormStatus @default(DRAFT)
  slug        String    @unique
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  responses   Response[]
  visits      Visit[]

  @@map("forms")
}

model Response {
  id            String    @id @default(uuid())
  formId        String
  form          Form      @relation(fields: [formId], references: [id], onDelete: Cascade)
  answers       Json
  metadata      Json
  respondentId  String?
  respondent    User?     @relation(fields: [respondentId], references: [id], onDelete: SetNull)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  visit         Visit?

  @@map("responses")
}

model Visit {
  id            String    @id @default(uuid())
  visitId       String    @unique
  formId        String
  form          Form      @relation(fields: [formId], references: [id], onDelete: Cascade)
  metadata      Json
  interactions  Json?
  completed     Boolean   @default(false)
  responseId    String?   @unique
  response      Response? @relation(fields: [responseId], references: [id], onDelete: SetNull)
  createdAt     DateTime  @default(now())

  @@map("visits")
}

enum Role {
  USER
  ADMIN
}

enum FormStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}